name: Snyk Security

on:
  push:
    branches: ["main" ]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  snyk:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    env:
      # Pass both the token and the organization ID to all steps
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      SNYK_ORG_ID: ${{ secrets.SNYK_ORG_ID }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Snyk CLI
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb

      # CORRECT WAY TO AUTHENTICATE IN CI: Provide the token directly to the command.
      # This is non-interactive and does not require a browser.
      - name: Authenticate to Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Code test
        run: snyk code test --sarif > snyk-code.sarif || true

      - name: Snyk Open Source monitor
        # CRITICAL: Use the --org flag to specify which Snyk Organization to use
        run: snyk monitor --all-projects --org=${{ env.SNYK_ORG_ID }}

      - name: Snyk IaC test and report
        # CRITICAL: Use the --org flag to specify which Snyk Organization to use
        run: snyk iac test --report --org=${{ env.SNYK_ORG_ID }} # || true

      - name: Build a Docker image
        run: docker build -t your/image-to-test .

      - name: Snyk Container monitor
        # CRITICAL: Use the --org flag to specify which Snyk Organization to use
        run: snyk container monitor your/image-to-test --file=Dockerfile --org=${{ env.SNYK_ORG_ID }}

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk-code.sarif
