# AniManga Recommender Backend Environment Configuration
# Copy this file to .env and fill in your actual values

# ===========================
# Flask Configuration
# ===========================
# Flask environment: development, production, testing
FLASK_ENV=development

# Secret key for Flask sessions (generate a secure random string)
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your_flask_secret_key_here

# Flask debug mode (set to False in production)
DEBUG=True

# ===========================
# Supabase Configuration
# ===========================
# Your Supabase project URL
SUPABASE_URL=https://your-project-id.supabase.co

# Supabase anonymous key (safe for client-side use)
SUPABASE_KEY=your_supabase_anon_key_here

# Supabase service role key (keep secret, server-side only)
SUPABASE_SERVICE_KEY=your_supabase_service_role_key_here

# ===========================
# Authentication
# ===========================
# JWT secret for token generation (generate a secure random string)
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
JWT_SECRET_KEY=your_jwt_secret_key_here

# ===========================
# CORS Configuration
# ===========================
# Comma-separated list of allowed origins
# Examples: https://yourdomain.com,https://app.yourdomain.com
# For Vercel: https://yourapp.vercel.app,https://*.vercel.app
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001

# ===========================
# Cache Configuration
# ===========================
# Memory cache size (number of items)
CACHE_MEMORY_SIZE=1000

# Memory cache size in MB
CACHE_MEMORY_MB=100

# Request cache TTL in seconds
REQUEST_CACHE_TTL=300

# ===========================
# Rate Limiting
# ===========================
# Default rate limit per minute
API_RATE_LIMIT=10

# Maximum items per page for pagination
MAX_ITEMS_PER_PAGE=50

# ===========================
# Server Configuration
# ===========================
# Port for the Flask application (Render will override with PORT env var)
PORT=5000

# Python unbuffered output (recommended for containers)
PYTHONUNBUFFERED=1

# Python path
PYTHONPATH=/app

# ===========================
# External Services (Optional)
# ===========================
# Redis URL (if using Redis for caching/queuing)
# REDIS_URL=redis://localhost:6379/0

# Celery broker URL (if using Celery)
# CELERY_BROKER_URL=redis://localhost:6379/0
# CELERY_RESULT_BACKEND=redis://localhost:6379/0

# ===========================
# Monitoring & Logging
# ===========================
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Enable structured JSON logging
ENABLE_JSON_LOGGING=false

# ===========================
# Feature Flags
# ===========================
# Enable/disable specific features
ENABLE_RECOMMENDATIONS=true
ENABLE_SOCIAL_FEATURES=true
ENABLE_MODERATION=true
ENABLE_ANALYTICS=true

# ===========================
# Performance Tuning
# ===========================
# Number of worker processes for Gunicorn (production)
WEB_CONCURRENCY=2

# Request timeout in seconds
REQUEST_TIMEOUT=120

# ===========================
# Database Connection Pool
# ===========================
# Maximum database connections
DB_POOL_SIZE=10

# Database connection timeout in seconds
DB_TIMEOUT=30

# ===========================
# Development Only
# ===========================
# Enable Flask auto-reload
FLASK_DEBUG=True

# Enable SQL query logging
LOG_SQL_QUERIES=False